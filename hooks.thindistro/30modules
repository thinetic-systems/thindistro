# hook for create modules

#if [ ! -e "$MODDIR/20_thinblue_$VERSION.squashfs" ]; then
#  create_module "20_thinblue"   "bluetooth bluez-utils python-bluez python-lightblue python-pysqlite2 sqlite3 bluez-utils obexftp python-apsw python-webpy thinblue" ""
#fi

#if [ ! -e "$MODDIR/30_web_$VERSION.squashfs" ]; then
#  create_module "30_web"   "apache2 libapache2-mod-php5 php5" ""
#fi

#if [ ! -e "$MODDIR/40_thinfilter_$VERSION.squashfs" ]; then
#  cat << EOM > $MODPKGS/40_thinfilter.sh
##!/bin/sh
## configure dnsmasq
#echo "#FIXME"

## configure squid3

## configure dansguardian
#EOM
#  chmod +x $MODPKGS/40_thinfilter.sh
#  create_module "40_thinfilter"   "squid3 dansguardian sarg dnsmasq" "$MODPKGS/40_thinfilter.sh"
#  rm -f $MODPKGS/40_thinfilter.sh

#  # configure squid logrotate
#  mkdir -p $MODPKGS/40_thinfilter/etc/logrotate.d
#  cat << FIN > $MODPKGS/40_thinfilter/etc/logrotate.d/squid3
##
## Logrotate fragment for squid3.
##
#/var/log/squid3/*.log {
#	daily
#	compress
#	delaycompress
#	rotate 2
#	missingok
#	nocreate
#	sharedscripts
#	prerotate
#		test ! -x /usr/sbin/sarg-reports || /usr/sbin/sarg-reports today
#	endscript
#	postrotate
#		test ! -e /var/run/squid.pid || /usr/sbin/squid -k rotate
#	endscript
#}
#FIN

#  mkdir -p $MODPKGS/40_thinfilter/etc/squid3
#  cat << FIN > $MODPKGS/40_thinfilter/etc/squid3/delay_pools.conf
### example
## delay_pools 1
## delay_class 1 2
### set total bw to 128KBs and limit any client to 64KBs
## delay_parameters 1 131072/8192 65536/8192
## delay_access 1 allow all

#FIN
#fi


# EXAMPLE MODULES
#if [ ! -e "$MODDIR/30_iceweasel_$VERSION.squashfs" ]; then
#  create_module "30_iceweasel" "iceweasel iceweasel-l10n-es-es iceweasel-gnome-support flashplayer-mozilla" ""
#fi


#if [ ! -e "$MODDIR/40_mplayer_$VERSION.squashfs" ]; then
#  create_module "40_mplayer"   "mplayer w32codecs libdvdcss2 libdvdread3" ""
#fi

if [ ! -e "$MODDIR/20_gnome_$VERSION.squashfs" ]; then
  create_module "20_gnome"   "xorg xfonts-utils gnome-core gdm iceweasel iceweasel-l10n-es-es x11-xserver-utils" ""
fi

if [ ! -e "$MODDIR/40_tcos_$VERSION.squashfs" ]; then
  cat << EOM > $MODPKGS/40_tcos.sh
#!/bin/sh

if [ "\$1" != "chroot" ]; then
  echo "40_tcos.sh exit now"
  exit 0
fi


  cat << EOF > /etc/tcos/templates/tcosconfig.conf
# file generated by all_chroot_tcos.sh on \$(date)
TEMPLATE_DESCRIPTION="TCOS Debian live template"

# conf based on template
TCOS_BASED_TEMPLATE=tcos.conf.all

#end of template
EOF

gentcos -tftp -size

cat << EOF > /etc/dnsmasq.conf
# dnsmasq.conf for TCOS
# file generated by all_chroot_tcos.sh on date $(date)

resolv-file=/etc/resolv.conf.real
listen-address=192.168.0.254,127.0.0.1

dhcp-range=192.168.0.101,192.168.0.130,12h
dhcp-option=option:router,192.168.0.1
dhcp-option=option:dns-server,192.168.0.254,192.168.0.1
dhcp-boot=/tcos/pxelinux.0,192.168.0.254,192.168.0.254

enable-tftp
tftp-root=/var/lib/tftpboot
dhcp-authoritative

EOF

cat << EOF > /etc/network/interfaces
# The loopback network interface
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
	address 192.168.0.254
	netmask	255.255.255.0
	gateway 192.168.0.1
	dns-nameservers 127.0.0.1
EOF

# use google DNS
cat << EOF > /etc/resolv.conf.real
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF

EOM
  chmod +x $MODPKGS/40_tcos.sh
  TCOSPKGS="linux-image-2.6.32-trunk-486 dnsmasq tcos tcos-configurator mbr syslinux mtools binutils tcos-usplash pavucontrol"
  TCOSPKGS="$TCOSPKGS pavumeter paman pulseaudio dropbear p910nd genisoimage tcosmonitor ltspfs fuse-utils"
  TCOSPKGS="$TCOSPKGS pulseaudio-esound-compat pulseaudio-module-x11 gstreamer0.10-pulseaudio vlc"
  create_module "40_tcos" "$TCOSPKGS" "$MODPKGS/40_tcos.sh"
fi

